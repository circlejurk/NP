
Project #1: Remote Access System (ras). 

In this homework, you are asked to design rsh-like access systems,
called remote access systems, including both 
client and server.  In this system, the server designates a directory, 
say ras/; then, clients can only run executable programs inside the 
directory, ras/.  

The following is a scenario of using the system.

csh> telnet myserver.nctu.edu.tw 7000 # the server port number
****************************************
** Welcome to the information server. **
****************************************
** You are in the directory, /home/studentA/ras/.
** This directory will be under "/", in this system.  
** This directory includes the following executable programs. 
** 
**	bin/
**	test.html	(test file)
**
** The directory bin/ includes: 
**	cat
**	ls
**	removetag		(Remove HTML tags.)
**	removetag0		(Remove HTML tags.)
**	number  		(Add a number in each line.)
**
** In addition, the following two commands are supported by ras. 
**	setenv	
**	printenv	
** 
% printenv PATH                       # Initial PATH is bin/ and ./
PATH=bin:.
% setenv PATH bin                     # Set to bin/ only
% printenv PATH
PATH=bin
% ls
bin/		test.html
% ls bin
ls		cat		removetag     removetag0    number
% cat test.html > test1.txt
% cat test1.txt
<!test.html>
<TITLE>Test<TITLE>
<BODY>This is a <b>test</b> program
for ras.
</BODY>
% removetag test.html

Test 
This is a test program
for ras.

% removetag test.html > test2.txt
% cat test2.txt

Test 
This is a test program
for ras.

% removetag0 test.html
Error: illegal tag "!test.html"

Test 
This is a test program
for ras.

% removetag0 test.html > test2.txt
Error: illegal tag "!test.html"
% cat test2.txt

Test 
This is a test program
for ras.

% removetag test.html | number
  1 
  2 Test 
  3 This is a test program
  4 for ras.
  5 
% removetag test.html |1           # This pipe will pipe stdout to next command. 
% number                          # The command's stdin is from the previous pipe.
  1 
  2 Test 
  3 This is a test program
  4 for ras.
  5 
% removetag test.html |2          # |2 will skip two commands and then pipe stdout to the next command. 
% ls
bin/		test.html   test1.txt   test2.txt
% number                          # The command's stdin is from the previous pipe.
  1 
  2 Test 
  3 This is a test program
  4 for ras.
  5 
% removetag test.html |2          # This pipe will pipe stdout to next next command. 
% removetag test.html |1          # This pipe will pipe stdout to next command. (Note: merge with the previous one)
% number                          # The command's stdin is from the previous pipe.
  1 
  2 Test 
  3 This is a test program
  4 for ras.
  5 
  6 
  7 Test 
  8 This is a test program
  9 for ras.
 10 
% removetag test.html |2          # This pipe will pipe stdout to next next command. 
% removetag test.html |1          # This pipe will pipe stdout to next command. (Note: merge with the previous one)
% number |1                       # The command's stdin is from the previous pipe, but piped to next one. 
% number                          # The command's stdin is from the previous pipe. (Note: the output may not be the same order.)
  1   1 
  2   2 Test 
  3   3 This is a test program
  4   4 for ras.
  5   5 
  6   6 
  7   7 Test 
  8   8 This is a test program
  9   9 for ras.
 10  10 
% removetag test.html | number |1 
% number 
  1   1 
  2   2 Test 
  3   3 This is a test program
  4   4 for ras.
  5   5 
% ls |2
% ls
bin/		test.html   test1.txt   test2.txt
% number > test3.txt
% cat test3.txt
  1 bin/
  2 test.html
  3 test1.txt
  4 test2.txt
% removetag0 test.html !1         # This pipe will pipe both stdout and stderr to next command. 
                                  # !n is the same as |n, except pipe both stdout and stderr. 
% number                          # The command's stdin is from the previous pipe.
  1 Error: illegal tag "!test.html"
  2 
  3 Test 
  4 This is a test program
  5 for ras.
  6 
% date
Unknown Command: date
# Let TA do this "cp /bin/date bin"  in your csh directory
% date
Wed Oct  1 00:41:50 CST 2003
% exit
csh> 


Requirements and Hints: 

5. commands |n and !n The level number n is no more than 1000.

6. For commands that are empty or have errors, the pipe to the command is closed
   subsequently.  

Additional comments: 

3. In addition to demo, you also need to prepare a simple report.


============================================================
If there is any different between hw1.txt and hw1Spec.txt, please follow the rule in hw1Spec.txt.

//////////////////////////////////////////////////////////////////////////////////////////////////////////
About server:

3.	Note that the forked process of server MUST be killed when the connection to the client is closed.
	Otherwise, there may be lots zombie processes.
	
//////////////////////////////////////////////////////////////////////////////////////////////////////////
About a numbered-pipe

1.	|N means the stdout of last command should be piped to the first command of next Nth line, where 1 <= N <= 1000.

2.	!N means both stdout and stderr of last command should be piped to the first command of next Nth line, where 1 <= N <= 1000.

3.	If there is any error in a input line, the line number still counts.

	eg. cat hello.txt |2
		ctt					<= unknown command, but the line number still counts
		number

//////////////////////////////////////////////////////////////////////////////////////////////////////////
About submit format:
(Please follow the format to submit the project, or you won't get full score in the project.)

1.	create a directory named your student ID, put all your code in the same directory layer

2.	zip the directory (Attention!! we only accept .zip format), upload the .zip to the E3 platform

e.g.
	create a directory 0356169, in that directory may have

	/0356169/server.cpp
	/0356169/socket.cpp
	...
	
	zip it and get 0356169.zip, finally upload 0356169.zip to E3

	The most important announcement is that we take plagiarism very seriously.
	All projects will be checked for plagiarism.
	Any cases that have been discovered will be reported to the instructors and will get zero on this project.

//////////////////////////////////////////////////////////////////////////////////////////////////////////
About server:
(Choose your server according to the last digit of your student ID)

server						the last digit
npbsd0.cs.nctu.edu.tw			0
npbsd1.cs.nctu.edu.tw			1
npbsd2.cs.nctu.edu.tw			2
npbsd3.cs.nctu.edu.tw			3
npbsd4.cs.nctu.edu.tw			4
nplinux0.cs.nctu.edu.tw			5
nplinux1.cs.nctu.edu.tw			6
nplinux2.cs.nctu.edu.tw			7
nplinux3.cs.nctu.edu.tw			8
nplinux4.cs.nctu.edu.tw			9

